{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DEXP\\\\Desktop\\\\ReactHooks\\\\hooks-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DEXP\\\\Desktop\\\\ReactHooks\\\\hooks-react\\\\src\\\\context\\\\github\\\\GithubState.js\";\nimport React, { useReducer } from 'react';\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types';\nimport { GithubContext } from './githubContext';\nimport axios from 'axios';\nimport { githubReducer } from './githubReducer';\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nconst withCreds = url => {\n  return \"\".concat(url, \"client_id=\").concat(CLIENT_ID, \"$client_secret=\").concat(CLIENT_SECRET);\n};\n\nexport const GithubState = ({\n  children\n}) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n\n  const _useReducer = useReducer(githubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const search = async value => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/search/users?q=\".concat(value, \"&\")));\n    dispatch({\n      type: SEARCH_USERS,\n      payload: response.data.items\n    });\n  };\n\n  const getUser = async name => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/users/\".concat(name, \"?\")));\n    dispatch({\n      type: GET_USER,\n      payload: response.data\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading();\n    const response = await axios.get(withCreds(\"https://api.github.com/users/\".concat(name, \"/repos?per_page=5&\")));\n    dispatch({\n      type: GET_REPOS,\n      payload: response.data\n    });\n  };\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  });\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  const user = state.user,\n        users = state.users,\n        repos = state.repos,\n        loading = state.loading;\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      setLoading,\n      search,\n      getUser,\n      getRepos,\n      clearUsers,\n      user,\n      users,\n      repos,\n      loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["C:\\Users\\DEXP\\Desktop\\ReactHooks\\hooks-react\\src\\context\\github\\GithubState.js"],"names":["React","useReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","GithubContext","axios","githubReducer","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","setLoading","response","get","type","payload","data","items","getUser","name","getRepos","clearUsers"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types'\r\nimport { GithubContext } from './githubContext'\r\nimport axios from 'axios'\r\nimport { githubReducer } from './githubReducer'\r\n\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}$client_secret=${CLIENT_SECRET}`\r\n}\r\n\r\nexport const GithubState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        )\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n        \r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}?`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n       \r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const clearUsers = () => dispatch({type: CLEAR_USERS})\r\n\r\n    const setLoading = () => dispatch({type:SET_LOADING})\r\n\r\n    const {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, search, getUser, getRepos, clearUsers,\r\n            user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}